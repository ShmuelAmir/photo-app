{"version":3,"sources":["app/storageFunctions.js","componnets/TagsMenu.js","componnets/TagInput.js","componnets/DateZoom.js","features/images/imageApi.js","features/images/imageSlice.js","componnets/FavoriteButton.js","componnets/Actions.js","layout/Navbar.js","componnets/SearchForm.js","features/images/Image.js","features/images/ImageList.js","features/images/ImageDate.js","layout/Main.js","App.js","app/store.js","index.js"],"names":["setArrayToStorage","tag","array","localStorage","setItem","JSON","stringify","getArrayFromStorage","parse","getItem","addToTagAraay","item","indexOf","push","removeFromTagAraay","splice","TagsMenu","handleChange","value","useState","anchorEl","setAnchorEl","options","Button","onClick","e","currentTarget","Tag","Menu","open","Boolean","onClose","RadioGroup","onChange","target","map","option","MenuItem","FormControlLabel","control","Radio","label","TagInput","input","setInput","TextField","size","color","onKeyPress","key","placeholder","DateZoom","navigate","useNavigate","handleClose","handleClick","innerText","ZoomIn","divider","baseUrl","generateRandomStringDate","day","Math","random","month","year","Date","toString","fetchAsyncImages","createAsyncThunk","a","axios","get","response","data","items","title","link","date","imageSlice","createSlice","name","initialState","images","lastResult","status","favorite","initTag","reducers","setImages","state","action","payload","setLastResult","setFavorite","setInitTag","clearAll","extraReducers","pending","fulfilled","rejected","actions","getStatus","image","getImages","getLastResult","getFavorite","getInitTag","FavoriteButton","dispatch","useDispatch","useSelector","checked","FavoriteBorder","Favorite","Actions","ButtonGroup","variant","disableElevation","Navbar","Box","sx","flexGrow","AppBar","Toolbar","Stack","direction","alignItems","spacing","PhotoCamera","cursor","Typography","SearchForm","Paper","onSubmit","preventDefault","elevation","component","p","display","width","height","InputBase","ml","flex","inputProps","IconButton","type","CircularProgress","Search","Image","favArr","isChecked","find","setChecked","tagArr","currVal","i","length","setValue","Grid","xs","sm","md","lg","xl","Card","CardHeader","lenght","slice","CardMedia","alt","CardActions","Tooltip","Checkbox","icon","checkedIcon","Download","filename","exportFile","Promise","resolve","url","fetch","then","blob","catch","err","console","error","ImageList","container","ImageDate","dateMonthYear","useParams","img","sort","d1","d2","d","arr","imgArr","currImg","currDate","toDateString","getUTCDate","getUTCMonth","getUTCFullYear","getMonth","getYear","index","Main","bgcolor","mt","minHeight","path","element","App","className","store","configureStore","reducer","imageReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAKaA,EAAoB,SAACC,EAAKC,GACnCC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KAQhCK,EAAsB,SAACN,GAChC,OAAOI,KAAKG,MAAML,aAAaM,QAAQR,KAAS,IAQvCS,EAAgB,SAACT,EAAKU,GAC/B,IAAMT,EAAQK,EAAoBN,IAEL,IAAzBC,EAAMU,QAAQD,KACdT,EAAMW,KAAKF,GACXX,EAAkBC,EAAKC,KASlBY,EAAqB,SAACb,EAAKU,GACpC,IAAMT,EAAQK,EAAoBN,GAClCC,EAAMa,OAAOb,EAAMU,QAAQD,GAAO,GAClCX,EAAkBC,EAAKC,I,OCEZc,MArCf,YAA4C,IAAxBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MAChC,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAUf,EAAoB,QAEpC,OACE,qCACE,cAACgB,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,gBAAtC,SACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CACAR,SAAUA,EACVS,KAAMC,QAAQV,GACdW,QAAS,kBAAMV,EAAY,OAH3B,SAKE,eAACW,EAAA,EAAD,CACAd,MAAOA,EACPe,SAAU,SAACR,GAAQR,EAAaQ,EAAES,OAAOhB,QAFzC,UAGGI,EAAQa,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACApB,MAAOkB,EACPG,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOL,KAJMA,MAOjB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACApB,MAAM,MACNqB,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,SAJM,gB,SCCTC,MA3Bf,WACI,MAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KAcA,OACI,cAACC,EAAA,EAAD,CACAC,KAAK,QACLC,MAAM,UACN7B,MAAOyB,EACPV,SAjBiB,SAACR,GAClBmB,EAASnB,EAAES,OAAOhB,QAiBlB8B,WAbiB,SAACvB,GACJ,KAAVkB,GAA0B,UAAVlB,EAAEwB,MAClBvC,EAAc,OAAQiC,GACtBC,EAAS,MAWbM,YAAY,gB,SCULC,I,EAAAA,EA/Bf,WACI,MAAgChC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACM+B,EAAWC,cAEXC,EAAc,WAChBjC,EAAY,OAGVkC,EAAc,SAAC9B,GACjB6B,IACAF,EAAS,kBAAD,OAAmB3B,EAAES,OAAOsB,aAGxC,OACI,qCACI,cAACjC,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,gBAAtC,SACI,cAAC+B,EAAA,EAAD,MAEJ,eAAC7B,EAAA,EAAD,CACAR,SAAUA,EACVS,KAAMC,QAAQV,GACdW,QAASuB,EAHT,UAKI,cAACjB,EAAA,EAAD,CAAUqB,SAAO,EAAClC,QAAS+B,EAA3B,iBACA,cAAClB,EAAA,EAAD,CAAUqB,SAAO,EAAClC,QAAS+B,EAA3B,mBACA,cAAClB,EAAA,EAAD,CAAUb,QAAS+B,EAAnB,yB,qFC3BHI,EAAO,yDAHR,0CAGQ,eAFT,yCAES,uCAiBPC,EAA2B,WACpC,IAAIC,EAAsB,GAAhBC,KAAKC,SACXC,EAAwB,GAAhBF,KAAKC,SACbE,EAAO,GAAAH,KAAKC,SAA2B,IAE3C,OAAO,IAAIG,KAAKD,EAAMD,EAAOH,GAAKM,YCrBzBC,EAAmBC,YAC9B,yBAD8C,uCAE9C,WAAO1B,GAAP,eAAA2B,EAAA,sEACyBC,IAAMC,IAAIb,EAAUhB,GAD7C,cACQ8B,EADR,yBAESA,EAASC,KAAKC,MAAMxC,KAAI,SAAAxB,GAAI,MAAK,CACtCiE,MAAOjE,EAAKiE,MACZC,KAAMlE,EAAKkE,KACXC,KAAMlB,SALV,2CAF8C,uDAoBnCmB,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAVmB,CACnBC,OAAQ,GACRC,WAAY,GACZC,OAAQ,KACRC,UAAU,EACVC,QAAS,OAMTC,SAAU,CACRC,UADQ,SACEC,EAAOC,GACfD,EAAMP,OAASQ,EAAOC,SAExBC,cAJQ,SAIMH,EAAOC,GACnBD,EAAMN,WAAaO,EAAOC,SAE5BE,YAPQ,SAOIJ,EAAOC,GACjBD,EAAMJ,SAAWK,EAAOC,SAE1BG,WAVQ,SAUGL,EAAOC,GAChBD,EAAMH,QAAUI,EAAOC,SAEzBI,SAbQ,SAaCN,GACPA,EAAMP,OAAS,GACfO,EAAMN,WAAa,GACnBM,EAAMJ,UAAW,EACjBI,EAAMH,QAAU,QAIpBU,eAAa,mBACV7B,EAAiB8B,SAAU,SAACR,GAC3B,OAAO,2BACFA,GADL,IAEEL,OAAQ,eAJD,cAOVjB,EAAiB+B,WAAY,SAACT,EAAOC,GACpC,OAAO,2BACFD,GADL,IAEEP,OAAQQ,EAAOC,QACfR,WAAYO,EAAOC,QACnBP,OAAQ,UAZD,cAeVjB,EAAiBgC,UAAW,SAACV,GAC5B,OAAO,2BACFA,GADL,IAEEL,OAAQ,UAlBD,KAwBR,EAAkFN,EAAWsB,QAA3EZ,GAAlB,EAAQ7C,SAAR,EAAkB6C,WAA0BK,GAA5C,EAA6BD,cAA7B,EAA4CC,aAAaC,EAAzD,EAAyDA,WAAYC,GAArE,EAAqEA,SAC/DM,GAAY,SAACZ,GAAD,OAAWA,EAAMa,MAAMlB,QACnCmB,GAAY,SAACd,GAAD,OAAWA,EAAMa,MAAMpB,QACnCsB,GAAgB,SAACf,GAAD,OAAWA,EAAMa,MAAMnB,YACvCsB,GAAc,SAAChB,GAAD,OAAWA,EAAMa,MAAMjB,UACrCqB,GAAa,SAACjB,GAAD,OAAWA,EAAMa,MAAMhB,SAClCR,KAAf,QCrDe6B,OAlBf,WACI,IAAMC,EAAWC,cACX1B,EAAa2B,YAAYN,IACzBO,EAAUD,YAAYL,IAQ5B,OACI,cAACnF,EAAA,EAAD,CAAQC,QANgB,WACxBqF,EAASf,GAAakB,IACtBH,EAASpB,EAAUuB,EAAUzG,EAAoB,YAAc6E,KAI/D,SACK4B,EAAU,cAACC,EAAA,EAAD,IAAqB,cAACC,EAAA,EAAD,OCW7BC,OArBf,WACE,IAAMN,EAAWC,cACX1B,EAAa2B,YAAYN,IACzBlB,EAAUwB,YAAYJ,IAQ5B,OACE,eAACS,EAAA,EAAD,CAAaC,QAAQ,YAAYC,kBAAgB,EAAjD,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUrG,aATI,SAAChB,GACjB4G,EAASpB,EAAkB,QAARxF,EAAgBmF,EAAa7E,EAAoBN,KACpE4G,EAASd,EAAW9F,KAOiBiB,MAAOqE,IAC1C,cAAC,EAAD,QCWSgC,OA7Bf,WACE,IAAMnE,EAAWC,cACXwD,EAAWC,cAOjB,OACE,cAACU,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACG,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACAC,UAAU,MACVC,WAAW,SACXC,QAAS,EACTP,GAAI,CAAEC,SAAU,GAChBlG,QAdY,WAClBqF,EAASb,MACT5C,EAAS,eAOH,UAME,cAAC6E,EAAA,EAAD,CAAaR,GAAI,CAAES,OAAQ,aAC3B,cAACC,EAAA,EAAD,CAAYd,QAAQ,KAAKI,GAAI,CAAES,OAAQ,WAAvC,uBAEF,cAAC,GAAD,Y,iDCcKE,OAtCf,WACI,IAAMvB,EAAWC,cACjB,EAA4B3F,mBAAS,IAArC,mBAAQwB,EAAR,KAAeC,EAAf,KACMyC,EAAS0B,YAAYT,IAc3B,OACI,eAAC+B,GAAA,EAAD,CACAC,SAViB,SAAC7G,GAClBA,EAAE8G,iBACY,KAAV5F,IACAkE,EAASzC,EAAiBzB,IAC1BC,EAAS,MAOb4F,UAAW,EACXC,UAAU,OACVhB,GAAI,CAAEiB,EAAG,UAAWC,QAAS,OAAQZ,WAAY,SAAUa,MAAO,IAAKC,OAAQ,IAJ/E,UAMI,cAACC,GAAA,EAAD,CACA5H,MAAOyB,EACPV,SArBa,SAACR,GAClBmB,EAASnB,EAAES,OAAOhB,QAqBduG,GAAI,CAAEsB,GAAI,EAAGC,KAAM,GACnB9F,YAAY,mBACZ+F,WAAY,CAAE,aAAc,kBAE5B,cAACC,GAAA,EAAD,CAAYC,KAAK,SAAS1B,GAAI,CAAEiB,EAAG,QAAU,aAAW,SAAxD,SACgB,YAAXrD,EAAuB,cAAC+D,GAAA,EAAD,CAAkBtG,KAAM,KAAQ,cAACuG,GAAA,EAAD,U,qGC4CzDC,OA1Ef,YAgBI,IAhBuB,IAAV/C,EAAS,EAATA,MACPgD,EAAShJ,EAAoB,YAC7BiJ,EAAY1H,QAAQyH,EAAOE,MAAK,SAAA9I,GAAI,OAAIA,EAAKkE,OAAS0B,EAAM1B,SAClE,EAA8B1D,mBAASqI,GAAvC,mBAAOxC,EAAP,KAAgB0C,EAAhB,KAUMC,EAASpJ,EAAoB,QAE/BqJ,EAAU,MACLC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC/B,GAAI/H,QAAQvB,EAAoBoJ,EAAOE,IAAIJ,MAAK,SAAA9I,GAAI,OAAIA,EAAKkE,OAAS0B,EAAM1B,SAAQ,CAChF+E,EAAUD,EAAOE,GACjB,MAGR,MAA0B1I,mBAASyI,GAAnC,mBAAO1I,EAAP,KAAc6I,EAAd,KAaA,OACI,cAACC,GAAA,EAAD,CAAMrJ,MAAI,EAACsJ,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACA3F,MAAO2B,EAAM3B,MAAM4F,OAAS,GAC3BjE,EAAM3B,MACJ2B,EAAM3B,MAAM6F,MAAM,EAAG,MACxB,cAACC,GAAA,EAAD,CACAjC,UAAU,MACVI,OAAO,MACPtC,MAAOA,EAAM1B,KACb8F,IAAKpE,EAAM3B,QACX,eAACgG,GAAA,EAAD,WACK,cAACC,GAAA,EAAD,CAASjG,MAAM,kBAAf,SACG,cAACkG,GAAA,EAAD,CACA9D,QAASA,EACT/E,SA7CC,SAACR,GAClBiI,EAAWjI,EAAES,OAAO8E,SACnBA,EAEKlG,EAAmB,WAAYyF,GADjC7F,EAAc,WAAY6F,IA2CdwE,KAAM,cAAC9D,EAAA,EAAD,IACN+D,YAAa,cAAC9D,EAAA,EAAD,QAEjB,cAAC,KAAD,CACAzE,MACI,cAACoI,GAAA,EAAD,CAASjG,MAAM,aAAf,SACI,cAACsE,GAAA,EAAD,UACI,cAAC+B,GAAA,EAAD,QAIZC,SAAU3E,EAAM3B,MAAQ,OACxBuG,WACI,kBAAMC,QAAQC,SNhEPC,EMgE8B/E,EAAM1B,KNhE5B,IAAIuG,SAAQ,SAACC,GAChDE,MAAMD,GACDE,MAAK,SAAA/G,GAAQ,OAAIA,EAASgH,UAC1BD,MAAK,SAAA9G,GAAU2G,EAAQ3G,MACvBgH,OAAM,SAAAC,GAASC,QAAQC,MAAMF,WAJR,IAACL,KMkEX,cAAC,EAAD,CAAUrK,aA1CR,SAAChB,GACD,QAAViB,GACAJ,EAAmBI,EAAOqF,GAElB,QAARtG,GACAS,EAAcT,EAAKsG,GAEvBwD,EAAS9J,IAmCsCiB,MAAOA,aC3D/C4K,OAVf,WACE,IAAM3G,EAAS4B,YAAYP,IAE3B,OACE,cAACwD,GAAA,EAAD,CAAM+B,WAAS,EAAC/D,QAAS,EAAzB,SACG7C,EAAOhD,KAAI,SAAAoE,GAAK,OAAI,cAAC,GAAD,CAAwBA,MAAOA,GAAnBA,EAAM1B,YCoE9BmH,OAxEf,WAaC,IAZA,IAAQC,EAAkBC,cAAlBD,cAEF9G,EAAS4B,YAAYP,IACzBrE,KAAI,SAAAgK,GAAG,kCACJA,GADI,IAEPrH,KAAM,IAAIZ,KAAKiI,EAAIrH,WAEnBsH,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGvH,KAAOwH,EAAGxH,QAE5ByH,EAAI,IAAIrI,KAAK,YACXsI,EAAM,GACRC,EAAS,GACJ5C,EAAI,EAAGA,EAAI1E,EAAO2E,OAAQD,IAAI,CACtC,IAAM6C,EAAUvH,EAAO0E,GACjB8C,EAAWD,EAAQ5H,KAEzB,OAAOmH,GACN,IAAK,MACAU,EAASC,iBAAmBL,EAAEK,iBACX,IAAlBH,EAAO3C,QACV0C,EAAI3L,KAAK4L,GAEVA,EAAS,GACTD,EAAI3L,KAAJ,UAAY8L,EAASE,aAArB,YAAqCF,EAASG,cAAc,EAA5D,YAAiEH,EAASI,mBAC1ER,EAAII,GAEL,MACD,IAAK,QACAA,EAASK,aAAeT,EAAES,YAAcL,EAASM,YAAcV,EAAEU,YAC9C,IAAlBR,EAAO3C,QACV0C,EAAI3L,KAAK4L,GAEVA,EAAS,GACTD,EAAI3L,KAAJ,UAAY8L,EAASG,cAAc,EAAnC,YAAwCH,EAASI,mBACjDR,EAAII,GAEL,MACD,IAAK,OACAA,EAASM,YAAcV,EAAEU,YACN,IAAlBR,EAAO3C,QACV0C,EAAI3L,KAAK4L,GAEVA,EAAS,GACTD,EAAI3L,KAAJ,UAAY8L,EAASI,mBACrBR,EAAII,GAOPF,EAAO5L,KAAK,CACXgE,KAAM6H,EAAQ7H,KACdD,MAAO8H,EAAQ9H,QAGjB4H,EAAI3L,KAAK4L,GACT,IAAIS,EAAQ,EACZ,OACC,mCACEV,EAAIrK,KAAI,SAAAxB,GACR,MAAuB,kBAATA,EACd,6BAAgBA,GAAPA,GACP,cAACqJ,GAAA,EAAD,CAAM+B,WAAS,EAAe/D,QAAS,EAAvC,SACArH,EAAKwB,KAAI,SAAAgK,GAAG,OAAI,cAAC,GAAD,CAAsB5F,MAAO4F,GAAjBA,EAAItH,UADXqI,WC1CZC,OAtBf,WACI,OACI,cAACtF,EAAA,EAAD,CACAuF,QAAQ,UACRpF,QAAS,EACTD,WAAW,SACXsF,GAAI,EACJ3E,EAAG,EACH4E,UAAW,QANX,SAOI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,aAAaC,QACrB,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,SAGR,cAAC,IAAD,CAAOD,KAAK,gCAAgCC,QAAS,cAAC,GAAD,YCJtDC,OAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC7F,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,YCTG8F,GAAQC,YAAe,CAClCC,QAAS,CACPtH,MAAOuH,MCCXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.6bdaa645.chunk.js","sourcesContent":["/**\r\n * Convert array to string and store it in local storage\r\n * @param {*} tag The key\r\n * @param {*} array The array to store\r\n */\r\nexport const setArrayToStorage = (tag, array) => {\r\n    localStorage.setItem(tag, JSON.stringify(array));\r\n}\r\n\r\n/**\r\n * Get string from local storage and convert it to array\r\n * @param {*} tag The key\r\n * @returns Array of items\r\n */\r\nexport const getArrayFromStorage = (tag) => {\r\n    return JSON.parse(localStorage.getItem(tag)) || [];\r\n}\r\n\r\n/**\r\n * Add item to array that store in local storage\r\n * @param {*} tag The key of the array\r\n * @param {*} item The item to add\r\n */\r\nexport const addToTagAraay = (tag, item) => {\r\n    const array = getArrayFromStorage(tag);\r\n\r\n    if (array.indexOf(item) === -1){\r\n        array.push(item);\r\n        setArrayToStorage(tag, array);\r\n    }\r\n}\r\n\r\n/**\r\n * Remove item from array that store in local storage\r\n * @param {*} tag The key of the array\r\n * @param {*} item The item to remove\r\n */\r\nexport const removeFromTagAraay = (tag, item) => {\r\n    const array = getArrayFromStorage(tag);\r\n    array.splice(array.indexOf(item), 1);\r\n    setArrayToStorage(tag, array);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { FormControlLabel, Button, Menu, MenuItem, RadioGroup, Radio } from '@mui/material'\r\nimport { Tag } from '@mui/icons-material';\r\nimport { getArrayFromStorage } from '../app/storageFunctions';\r\n\r\nfunction TagsMenu({ handleChange, value }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const options = getArrayFromStorage('tags');\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n        <Tag />\r\n      </Button>\r\n      <Menu \r\n      anchorEl={anchorEl}\r\n      open={Boolean(anchorEl)}\r\n      onClose={() => setAnchorEl(null)}\r\n      >\r\n        <RadioGroup\r\n        value={value}\r\n        onChange={(e) => { handleChange(e.target.value); }}>\r\n          {options.map((option) => (\r\n            <MenuItem key={option}>\r\n              <FormControlLabel \r\n              value={option} \r\n              control={<Radio />} \r\n              label={option} />\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem key='all'>\r\n            <FormControlLabel \r\n            value='all' \r\n            control={<Radio />} \r\n            label='all' />\r\n          </MenuItem> \r\n        </RadioGroup>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TagsMenu;\r\n","import React, { useState } from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport { addToTagAraay } from '../app/storageFunctions';\r\n\r\nfunction TagInput() {\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    \r\n    // add tag to the tag list\r\n    const handleSubmit = (e) => {\r\n        if (input !== \"\" && e.key === \"Enter\") {\r\n            addToTagAraay('tags', input);\r\n            setInput(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TextField \r\n        size='small'\r\n        color=\"success\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyPress={handleSubmit}\r\n        placeholder='add tag...'\r\n        />\r\n    )\r\n}\r\n\r\nexport default TagInput\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, Menu, MenuItem } from '@mui/material'\r\nimport { ZoomIn } from '@mui/icons-material'\r\n\r\nfunction DateZoom() {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        handleClose();\r\n        navigate(`photo-app/date/${e.target.innerText}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                <ZoomIn /> \r\n            </Button>\r\n            <Menu \r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n            >\r\n                <MenuItem divider onClick={handleClick}>day</MenuItem>\r\n                <MenuItem divider onClick={handleClick}>month</MenuItem>\r\n                <MenuItem onClick={handleClick}>year</MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DateZoom\r\n","const KEY = \"AIzaSyCtHHv1TEIlus2fYwOR_ZdB4P3y-MnEm4o\";\r\nconst CX = \"2baf5dc630067a92c&cx=2baf5dc630067a92c\";\r\n\r\nexport const baseUrl = `https://www.googleapis.com/customsearch/v1?key=${KEY}&cx=${CX}&searchType=image&imgSize=medium&q=`\r\n\r\n/**\r\n * get an image for download \r\n * @param {*} url The link to the image\r\n */\r\nexport const getDataFromURL = (url) => new Promise((resolve) => {\r\n    fetch(url)\r\n        .then(response => response.blob())\r\n        .then(data => { resolve(data) })\r\n        .catch(err => { console.error(err) });\r\n});\r\n\r\n/**\r\n * generate a random date in the last years\r\n * @returns string represet the date\r\n */\r\nexport const generateRandomStringDate = () => {\r\n    let day = Math.random() * 29;\r\n    let month = Math.random() * 11;\r\n    let year = Math.random() * (2021 - 2000) + 2000;\r\n\r\n    return new Date(year, month, day).toString();\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { baseUrl, generateRandomStringDate } from './imageApi'\r\n\r\nexport const fetchAsyncImages = createAsyncThunk(\r\n  'image/fetchAsyncImages',\r\n  async (input) => {\r\n    const response = await axios.get(baseUrl + input);\r\n    return response.data.items.map(item => ({\r\n      title: item.title,\r\n      link: item.link,\r\n      date: generateRandomStringDate()\r\n    }));\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  images: [],\r\n  lastResult: [],\r\n  status: null,\r\n  favorite: true,\r\n  initTag: 'all'\r\n};\r\n\r\nexport const imageSlice = createSlice({\r\n  name: 'image',\r\n  initialState,\r\n  reducers: {\r\n    setImages(state, action) {\r\n      state.images = action.payload;\r\n    },\r\n    setLastResult(state, action) {\r\n      state.lastResult = action.payload;\r\n    },\r\n    setFavorite(state, action) {\r\n      state.favorite = action.payload;\r\n    },\r\n    setInitTag(state, action) {\r\n      state.initTag = action.payload;\r\n    },\r\n    clearAll(state) {\r\n      state.images = [];\r\n      state.lastResult = [];\r\n      state.favorite = true;\r\n      state.initTag = 'all';\r\n    }\r\n  },\r\n\r\n  extraReducers: {\r\n    [fetchAsyncImages.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        status: 'loading'\r\n      }\r\n    },\r\n    [fetchAsyncImages.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        images: action.payload, \r\n        lastResult: action.payload,\r\n        status: null \r\n      };\r\n    },\r\n    [fetchAsyncImages.rejected]: (state) => {\r\n      return {\r\n        ...state,\r\n        status: null \r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setInput, setImages, setLastResult, setFavorite, setInitTag, clearAll } = imageSlice.actions;\r\nexport const getStatus = (state) => state.image.status;\r\nexport const getImages = (state) => state.image.images;\r\nexport const getLastResult = (state) => state.image.lastResult;\r\nexport const getFavorite = (state) => state.image.favorite;\r\nexport const getInitTag = (state) => state.image.initTag;\r\nexport default imageSlice.reducer;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { setFavorite, setImages, getLastResult, getFavorite } from '../features/images/imageSlice';\r\nimport { getArrayFromStorage } from '../app/storageFunctions';\r\n\r\nfunction FavoriteButton() {\r\n    const dispatch = useDispatch();\r\n    const lastResult = useSelector(getLastResult);\r\n    const checked = useSelector(getFavorite);\r\n\r\n    // toggle the images in the store between favorite images and the resulte\r\n    const handleFavoriteClick = () => {\r\n        dispatch(setFavorite(!checked));\r\n        dispatch(setImages(checked ? getArrayFromStorage('favorite') : lastResult));\r\n    }\r\n\r\n    return (\r\n        <Button onClick={handleFavoriteClick}>\r\n            {checked ? <FavoriteBorder /> : <Favorite />}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default FavoriteButton;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonGroup } from '@mui/material';\r\nimport TagsMenu from './TagsMenu';\r\nimport TagInput from './TagInput';\r\nimport DateZoom from './DateZoom';\r\nimport FavoriteButton from './FavoriteButton';\r\nimport { setImages, setInitTag, getLastResult, getInitTag } from '../features/images/imageSlice';\r\nimport { getArrayFromStorage } from '../app/storageFunctions';\r\n\r\nfunction Actions() {\r\n  const dispatch = useDispatch();\r\n  const lastResult = useSelector(getLastResult);\r\n  const initTag = useSelector(getInitTag);\r\n\r\n  // alternate the images in the store between specific tags and the resulte\r\n  const tagFilter = (tag) => {\r\n    dispatch(setImages(tag === 'all' ? lastResult : getArrayFromStorage(tag)));\r\n    dispatch(setInitTag(tag));\r\n  }\r\n\r\n  return (\r\n    <ButtonGroup variant=\"contained\" disableElevation>\r\n      <FavoriteButton />\r\n      <DateZoom />\r\n      <TagsMenu handleChange={tagFilter} value={initTag} />\r\n      <TagInput />\r\n    </ButtonGroup>\r\n  )\r\n}\r\n\r\nexport default Actions\r\n","import * as React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, AppBar, Toolbar, Typography, Stack } from '@mui/material'\r\nimport { PhotoCamera } from '@mui/icons-material'\r\nimport Actions from '../componnets/Actions'\r\nimport { clearAll } from '../features/images/imageSlice'\r\n\r\nfunction Navbar() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch(clearAll());\r\n    navigate('photo-app/');\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n       <AppBar>\r\n        <Toolbar>\r\n          <Stack \r\n          direction=\"row\" \r\n          alignItems=\"center\" \r\n          spacing={2}\r\n          sx={{ flexGrow: 1 }} \r\n          onClick={handleClick}>\r\n            <PhotoCamera sx={{ cursor: 'pointer' }} />\r\n            <Typography variant=\"h6\" sx={{ cursor: 'pointer' }}>Photos</Typography>\r\n          </Stack>\r\n          <Actions />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Paper, InputBase, IconButton, CircularProgress } from '@mui/material'\r\nimport { Search } from '@mui/icons-material'\r\nimport { fetchAsyncImages, getStatus } from '../features/images/imageSlice'\r\n\r\nfunction SearchForm() {\r\n    const dispatch = useDispatch();\r\n    const [ input, setInput ] = useState('');\r\n    const status = useSelector(getStatus);\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (input !== '') {\r\n            dispatch(fetchAsyncImages(input));\r\n            setInput('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Paper\r\n        onSubmit={handleSubmit}\r\n        elevation={3}\r\n        component=\"form\"\r\n        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 450, height: 50}}\r\n        >\r\n            <InputBase\r\n            value={input}\r\n            onChange={handleChange}\r\n            sx={{ ml: 1, flex: 1 }}\r\n            placeholder=\"Search Images...\"\r\n            inputProps={{ 'aria-label': 'Search Image' }}\r\n            />\r\n            <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                {status === 'loading' ? <CircularProgress size={24}/> : <Search />}\r\n            </IconButton>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from 'react'\r\nimport DownloadLink from \"react-download-link\";\r\nimport { Card, CardActions, CardHeader, CardMedia, Checkbox, Grid, IconButton, Tooltip } from '@mui/material'\r\nimport { Download, Favorite, FavoriteBorder } from '@mui/icons-material'\r\nimport TagsMenu from '../../componnets/TagsMenu';\r\nimport { getArrayFromStorage, addToTagAraay, removeFromTagAraay } from '../../app/storageFunctions'\r\nimport { getDataFromURL } from './imageApi'\r\n\r\nfunction Image({ image }) {\r\n    const favArr = getArrayFromStorage('favorite');\r\n    const isChecked = Boolean(favArr.find(item => item.link === image.link));\r\n    const [checked, setChecked] = useState(isChecked);\r\n\r\n    // toggle an image in and out from favorite\r\n    const handleChange = (e) => {\r\n        setChecked(e.target.checked);\r\n        !checked ? \r\n            addToTagAraay('favorite', image)\r\n            : removeFromTagAraay('favorite', image);\r\n    }\r\n\r\n    const tagArr = getArrayFromStorage('tags');\r\n    // determine the current tag of the image\r\n    let currVal = 'all';\r\n    for (let i = 0; i < tagArr.length; i++){\r\n        if (Boolean(getArrayFromStorage(tagArr[i]).find(item => item.link === image.link))) {\r\n            currVal = tagArr[i];\r\n            break;\r\n        }\r\n    }\r\n    const [value, setValue] = useState(currVal);\r\n    \r\n    // toggle an image in and out from tag\r\n    const toggleTag = (tag) => {\r\n        if (value !== 'all') {\r\n            removeFromTagAraay(value, image);\r\n        }\r\n        if (tag !== 'all') {\r\n            addToTagAraay(tag, image);\r\n        }\r\n        setValue(tag);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n            <Card>\r\n                <CardHeader \r\n                title={image.title.lenght < 25 ?\r\n                 image.title \r\n                 : image.title.slice(0, 25)} />\r\n                <CardMedia \r\n                component=\"img\" \r\n                height=\"200\" \r\n                image={image.link} \r\n                alt={image.title}/>\r\n                <CardActions>\r\n                     <Tooltip title=\"add to favorite\">\r\n                        <Checkbox \r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        icon={<FavoriteBorder />} \r\n                        checkedIcon={<Favorite />} />\r\n                    </Tooltip>\r\n                    <DownloadLink \r\n                    label={\r\n                        <Tooltip title=\"save photo\">\r\n                            <IconButton>\r\n                                <Download />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                    filename={image.title + \".png\"}\r\n                    exportFile={\r\n                        () => Promise.resolve(getDataFromURL(image.link))\r\n                    } />\r\n                    <TagsMenu handleChange={toggleTag} value={value}/>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Image;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Grid } from '@mui/material'\r\nimport { getImages } from './imageSlice'\r\nimport Image from './Image'\r\n\r\nfunction ImageList() {\r\n  const images = useSelector(getImages);\r\n  \r\n  return (\r\n    <Grid container spacing={2}>\r\n      {images.map(image => <Image key={image.link} image={image}/>)}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ImageList;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getImages } from './imageSlice'\r\nimport Image from './Image'\r\nimport { Grid } from '@mui/material'\r\n\r\nfunction ImageDate() {\r\n\tconst { dateMonthYear } = useParams();\r\n\r\n\tconst images = useSelector(getImages)\r\n\t\t.map(img => ({\r\n\t\t\t...img, \r\n\t\t\tdate: new Date(img.date) \r\n\t\t}))\r\n\t\t.sort((d1, d2) => d1.date - d2.date);\r\n\r\n\tlet d = new Date('1/1/1500');\r\n\tconst arr = [];\r\n\tlet imgArr = [];\r\n\tfor (let i = 0; i < images.length; i++){\r\n\t\tconst currImg = images[i];\r\n\t\tconst currDate = currImg.date;\r\n\t\t\r\n\t\tswitch(dateMonthYear){\r\n\t\t\tcase 'day':\r\n\t\t\t\tif (currDate.toDateString() !== d.toDateString()) {\r\n\t\t\t\t\tif (imgArr.length !== 0){\r\n\t\t\t\t\t\tarr.push(imgArr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\timgArr = [];\r\n\t\t\t\t\tarr.push(`${currDate.getUTCDate()}/${currDate.getUTCMonth()+1}/${currDate.getUTCFullYear()}`);\r\n\t\t\t\t\td = currDate;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'month':\r\n\t\t\t\tif (currDate.getMonth() !== d.getMonth() || currDate.getYear() !== d.getYear()) {\r\n\t\t\t\t\tif (imgArr.length !== 0){\r\n\t\t\t\t\t\tarr.push(imgArr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\timgArr = [];\r\n\t\t\t\t\tarr.push(`${currDate.getUTCMonth()+1}/${currDate.getUTCFullYear()}`);\r\n\t\t\t\t\td = currDate;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'year':\r\n\t\t\t\tif (currDate.getYear() !== d.getYear()) {\r\n\t\t\t\t\tif (imgArr.length !== 0){\r\n\t\t\t\t\t\tarr.push(imgArr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\timgArr = [];\r\n\t\t\t\t\tarr.push(`${currDate.getUTCFullYear()}`);\r\n\t\t\t\t\td = currDate;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\timgArr.push({\r\n\t\t\tlink: currImg.link, \r\n\t\t\ttitle: currImg.title\r\n\t\t});\r\n\t}\t\r\n\tarr.push(imgArr);\r\n\tlet index = 0;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{arr.map(item => {\r\n\t\t\t\treturn typeof item === 'string' ?\r\n\t\t\t\t<h2 key={item}>{item}</h2>\r\n\t\t\t\t: <Grid container key={index++} spacing={2}>\r\n\t\t\t\t\t{item.map(img => <Image key={img.link} image={img}/>)}\r\n\t\t\t\t</Grid>  \r\n\t\t\t})}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ImageDate;\r\n","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport Stack from '@mui/material/Stack'\r\nimport SearchForm from '../componnets/SearchForm' \r\nimport ImageList from '../features/images/ImageList'\r\nimport ImageDate from '../features/images/ImageDate'\r\n\r\nfunction Main() {\r\n    return (\r\n        <Stack \r\n        bgcolor='#EAEEF3' \r\n        spacing={2} \r\n        alignItems='center'\r\n        mt={7} \r\n        p={5}\r\n        minHeight={'100vh'}>    \r\n            <Routes>\r\n                <Route path=\"photo-app/\" element={\r\n                    <>\r\n                        <SearchForm /> \r\n                        <ImageList />\r\n                    </>\r\n                } />\r\n                <Route path=\"photo-app/date/:dateMonthYear\" element={<ImageDate />} />\r\n            </Routes>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport Navbar from './layout/Navbar'\nimport Main from './layout/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stack>\n        <Router>\n          <Navbar />\n          <Main />\n        </Router>\n      </Stack>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport imageReducer from '../features/images/imageSlice'\n\nexport const store = configureStore({\n  reducer: {\n    image :imageReducer,\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}